# Deny the ETag header to prevent potential information leakage
request_header_access ETag deny all
reply_header_access ETag deny all

# Deny the Server header to obscure server details
header_access Server deny all

# Define ACLs (Access Control Lists) for local networks

# RFC 1122 "this" network (LAN) - covers 0.0.0.1 to 0.255.255.255
acl localnet src 0.0.0.1-0.255.255.255

# RFC 1918 local private network (LAN) - 10.0.0.0 to 10.255.255.255
acl localnet src 10.0.0.0/8

# RFC 6598 shared address space (Carrier-Grade NAT)
acl localnet src 100.64.0.0/10

# RFC 3927 link-local (directly plugged) machines
acl localnet src 169.254.0.0/16

# RFC 1918 local private network (LAN) - 172.16.0.0 to 172.31.255.255
acl localnet src 172.16.0.0/12

# RFC 1918 local private network (LAN) - 192.168.0.0 to 192.168.255.255
acl localnet src 192.168.0.0/16

# RFC 4193 local private IPv6 network range (Unique Local Addresses)
acl localnet src fc00::/7

# RFC 4291 link-local IPv6 addresses (directly plugged)
acl localnet src fe80::/10

# Define ACL for SSL (HTTPS) ports
acl SSL_ports port 443

# Define ACLs for safe ports that are allowed for HTTP access
acl Safe_ports port 80          # HTTP
acl Safe_ports port 21          # FTP
acl Safe_ports port 443         # HTTPS
acl Safe_ports port 70          # Gopher
acl Safe_ports port 210         # WAIS
acl Safe_ports port 1025-65535  # Unregistered ports
acl Safe_ports port 280         # HTTP Management
acl Safe_ports port 488         # GSS-HTTP
acl Safe_ports port 591         # FileMaker
acl Safe_ports port 777         # Multilingual HTTP

# Deny access to ports that are not considered safe
http_access deny !Safe_ports

# Deny CONNECT method to ports other than SSL ports (typically port 443)
http_access deny CONNECT !SSL_ports

# Allow access to the manager interface from localhost
http_access allow localhost manager

# Deny access to the manager interface from all other sources
http_access deny manager

# Allow all other HTTP access (use with caution)
http_access allow all # kinda sus, but okay for now

# Define ACL for the CONNECT method
acl CONNECT method CONNECT

# Deny requests attempting to access localhost addresses
http_access deny to_localhost

# Deny requests attempting to access link-local addresses
http_access deny to_linklocal

# Include additional configuration files from /etc/squid/conf.d/
# include /etc/squid/conf.d/*.conf

# Deny all other HTTP access as a fallback
http_access deny all

# Specify the port Squid will listen on for HTTP requests
http_port 31280

# Set the directory where core dumps are stored (for debugging)
coredump_dir /var/spool/squid

# Define refresh patterns to control caching behavior

# FTP URLs: refresh after 1440 minutes (1 day), allow up to 20% revalidation, max 10080 minutes (7 days)
refresh_pattern ^ftp:           1440    20%     10080

# CGI scripts or URLs with query parameters: do not cache
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0

# Package-related files with optional compression extensions: do not cache, use If-Modified-Since
refresh_pattern \/(Packages|Sources)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims

# Release files with optional .gpg extension: do not cache, use If-Modified-Since
refresh_pattern \/Release(|\.gpg)$ 0 0% 0 refresh-ims

# InRelease files: do not cache, use If-Modified-Since
refresh_pattern \/InRelease$ 0 0% 0 refresh-ims

# Translation files with optional compression extensions: do not cache, use If-Modified-Since
refresh_pattern \/(Translation-.*)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims

# Default pattern: do not cache, allow up to 20% revalidation, max 4320 minutes (3 days)
refresh_pattern .               0       20%     4320

# Disable the Via header to prevent disclosure of proxy usage
via off

# Suppress the version string in HTTP headers for security
httpd_suppress_version_string on

# Remove the X-Forwarded-For header to prevent disclosure of client IP
forwarded_for delete

# Control access to request headers

# Allow all clients to see the Allow header
request_header_access Allow allow all

# Allow all clients to see the Authorization header
request_header_access Authorization allow all

# Allow all clients to see the WWW-Authenticate header
request_header_access WWW-Authenticate allow all

# Allow all clients to see the Proxy-Authorization header
request_header_access Proxy-Authorization allow all

# Allow all clients to see the Proxy-Authenticate header
request_header_access Proxy-Authenticate allow all

# Allow all clients to see the Cache-Control header
request_header_access Cache-Control allow all

# Deny all clients from seeing the From header for privacy
request_header_access From deny all

# Deny all clients from seeing the Referer header to enhance privacy
request_header_access Referer deny all

# Deny all clients from seeing the User-Agent header to obscure client details
request_header_access User-Agent deny all

# Deny all clients from seeing the X-Forwarded-For header to hide client IP
request_header_access X-Forwarded-For deny all

# Deny all clients from seeing the X-Forwarded-Proto header
request_header_access X-Forwarded-Proto deny all

# Deny all clients from seeing the X-Real-IP header to hide client IP
request_header_access X-Real-IP deny all

# Deny all clients from seeing the Via header to prevent disclosure of proxy usage
request_header_access Via deny all

# Deny all clients from seeing the X-Cache header to obscure caching details
request_header_access X-Cache deny all

# Deny all clients from seeing the X-Cache-Lookup header to obscure caching lookup details
request_header_access X-Cache-Lookup deny all

# ipv6 suppression
dns_v4_first on

# Cache Directory
cache_dir ufs /var/spool/squid 100 16 256
